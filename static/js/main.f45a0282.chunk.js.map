{"version":3,"sources":["components/Filter/Filter.module.css","components/Form.module.css","components/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Form","state","name","number","nameInputId","shortid","generate","telInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","label","htmlFor","input","type","pattern","title","required","onChange","id","button","Component","ContactsList","contacts","onDeleteContact","length","list","map","item","onClick","defaultProps","Filter","App","filter","addNewContact","newContact","find","contact","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getFilteredContacts","normalizedFilter","includes","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f45a0282.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__yCvBt\",\"input\":\"Filter_input__300p6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__cnu_9\",\"label\":\"Form_label__2QGD8\",\"input\":\"Form_input__1tfLV\",\"button\":\"Form_button__lzcw8\"};","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  telInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label} htmlFor={this.telInputId}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.telInputId}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  (contacts.length === 0) ? <div> No contacts </div> : <ul className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.item}>\r\n        {name}: {number}\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nContactsList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.node,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.string),\n    filter: PropTypes.string,\n  };\n\n  addNewContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    contacts.find(\n      (contact) => newContact.name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [...contacts, newContact],\n        }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    console.log(\"parcsedContacts\", parsedContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"componentDidUpdate\");\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"обновилось после контактов\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n    console.log(prevState);\n    console.log(this.state);\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3oKgs\",\"item\":\"ContactsList_item__36bAM\",\"button\":\"ContactsList_button__3z_r-\"};"],"sourceRoot":""}